{"version":3,"sources":["utils/index.js","components/tweet/Tweet.jsx","components/tweet-box/TweetBox.jsx","components/alert/CustomAlert.jsx","components/toggle/Toggle.jsx","components/rain/Rain.jsx","components/snow/Snow.jsx","app/handleAlert.js","app/App.jsx","index.jsx"],"names":["alertProps","isTweet","variant","message","isRetweet","isDelete","noop","Tweet","tweet","handleRetweet","handleLike","handleDelete","Media","className","Image","roundedCircle","width","src","Body","moment","date","fromNow","text","icon","faRetweet","onClick","faHeart","liked","faTrashAlt","defaultProps","memo","TweetBox","placeholder","handleAlert","setAlert","useState","tweets","charsRemain","state","setState","inputRef","useRef","handleTweet","tweetText","current","value","tweetObj","Date","toISOString","prevState","type","map","t","filter","toLocaleString","handleEnterKeyPress","e","keyCode","useEffect","window","addEventListener","removeEventListener","Container","Row","Col","md","sm","InputGroup","FormControl","ref","onChange","inputText","target","length","Append","Button","disabled","faTwitter","key","CustomAlert","isShown","clsx","Toggle","lLabel","rLabel","isRain","toggle","htmlFor","id","viewBox","preserveAspectRatio","fill","fillOpacity","transform","cx","cy","rx","ry","r","rains","i","push","setTimeout","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b15756a.chunk.js","sourcesContent":["export const alertProps = {\n  isTweet: {\n    variant: 'success',\n    message: 'Your tweet was sent.',\n  },\n  isRetweet: {\n    variant: 'info',\n    message: 'Your tweet has been retweeted.',\n  },\n  isDelete: {\n    variant: 'danger',\n    message: 'Your tweet has been deleted.',\n  },\n};\n\nexport const noop = () => {};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Media, Image } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faRetweet,\n  faHeart,\n  faTrashAlt,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { noop } from 'utils';\nimport './Tweet.scss';\n\nconst Tweet = ({ tweet, handleRetweet, handleLike, handleDelete }) => (\n  <Media className=\"tweet my-3\">\n    <Image\n      roundedCircle\n      width=\"64px\"\n      className=\"mr-3\"\n      src=\"https://pbs.twimg.com/profile_images/553467511211970560/nBE77dF0_400x400.jpeg\"\n    />\n    <Media.Body>\n      <h5 className=\"mt-0\">\n        {`Khoa Bui `}\n        <span className=\"sub-text\">\n          {`@buihdk ${moment(tweet.date).fromNow()}`}\n        </span>\n      </h5>\n      <p>{tweet.text}</p>\n      <FontAwesomeIcon icon={faRetweet} onClick={() => handleRetweet(tweet)} />\n      <FontAwesomeIcon\n        icon={faHeart}\n        onClick={() => handleLike(tweet)}\n        className={tweet.liked ? 'liked' : ''}\n      />\n      <FontAwesomeIcon icon={faTrashAlt} onClick={() => handleDelete(tweet)} />\n    </Media.Body>\n  </Media>\n);\n\nTweet.propTypes = {\n  tweet: PropTypes.shape({\n    text: PropTypes.string,\n    liked: PropTypes.bool,\n    date: PropTypes.string,\n  }),\n  handleRetweet: PropTypes.func,\n  handleLike: PropTypes.func,\n  handleDelete: PropTypes.func,\n};\n\nTweet.defaultProps = {\n  tweet: {\n    text: '',\n    liked: false,\n    date: '',\n  },\n  handleRetweet: noop,\n  handleLike: noop,\n  handleDelete: noop,\n};\n\nexport default memo(Tweet);\n","import React, { useState, useEffect, useRef, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\n\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  InputGroup,\n  FormControl,\n  Button,\n} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Tweet from 'components/tweet/Tweet';\nimport { noop } from 'utils';\nimport './TweetBox.scss';\n\nconst TweetBox = ({ placeholder, handleAlert, setAlert }) => {\n  const [state, setState] = useState({\n    tweets: [],\n    text: '',\n    charsRemain: 140,\n  });\n\n  const inputRef = useRef();\n\n  const handleInputChange = e => {\n    const inputText = e.target.value;\n    setState(prevState => ({\n      ...prevState,\n      text: inputText,\n      charsRemain: 140 - inputText.length,\n    }));\n  };\n\n  const handleTweet = () => {\n    const tweetText = inputRef.current.value;\n    if (!tweetText) return;\n    const tweetObj = {\n      text: tweetText,\n      liked: false,\n      date: new Date().toISOString(),\n    };\n    setState(prevState => ({\n      tweets: [...prevState.tweets, tweetObj],\n      text: '',\n      charsRemain: 140,\n    }));\n    handleAlert({ type: 'isTweet', setAlert });\n  };\n\n  const handleLike = tweet => {\n    setState(prevState => ({\n      tweets: prevState.tweets.map(t => {\n        if (t.date === tweet.date)\n          return { text: t.text, liked: !t.liked, date: t.date };\n        return t;\n      }),\n      text: '',\n      charsRemain: 140,\n    }));\n  };\n\n  const handleDelete = tweet => {\n    setState(prevState => ({\n      tweets: prevState.tweets.filter(t => t.date !== tweet.date),\n      text: '',\n      charsRemain: 140,\n    }));\n    handleAlert({ type: 'isDelete', setAlert });\n  };\n\n  const handleRetweet = tweet => {\n    const tweetObj = {\n      text: tweet.text,\n      liked: tweet.liked,\n      date: new Date().toLocaleString(),\n    };\n    setState(prevState => ({\n      tweets: [...prevState.tweets, tweetObj],\n      text: '',\n      charsRemain: 140,\n    }));\n    handleAlert({ type: 'isRetweet', setAlert });\n  };\n\n  const handleEnterKeyPress = e => {\n    if (e.keyCode === 13) handleTweet();\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleEnterKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleEnterKeyPress);\n    };\n  }, []);\n\n  return (\n    <section className=\"tweetbox border-bottom\">\n      <Container>\n        <Row>\n          <Col md={3} className=\"d-none d-md-block\">\n            <Image\n              roundedCircle\n              className=\"avatar\"\n              src=\"https://pbs.twimg.com/profile_images/553467511211970560/nBE77dF0_400x400.jpeg\"\n            />\n          </Col>\n          <Col sm={12} md={9}>\n            <InputGroup className=\"px-4\">\n              <FormControl\n                ref={inputRef}\n                placeholder={placeholder}\n                value={state.text}\n                onChange={handleInputChange}\n              />\n              <InputGroup.Append>\n                <Button\n                  type=\"submit\"\n                  value=\"submit\"\n                  onClick={handleTweet}\n                  disabled={state.charsRemain < 0}\n                >\n                  <span className=\"mobile-hidden\">Tweet </span>\n                  <FontAwesomeIcon icon={faTwitter} />\n                </Button>\n                <p className=\"chars my-auto mobile-hidden\">\n                  {`${state.charsRemain} chars left`}\n                </p>\n              </InputGroup.Append>\n            </InputGroup>\n            <Container className=\"tweets mt-4\">\n              {state.tweets &&\n                state.tweets.map(tweet => (\n                  <Tweet\n                    tweet={tweet}\n                    key={tweet.date}\n                    handleLike={handleLike}\n                    handleDelete={handleDelete}\n                    handleRetweet={handleRetweet}\n                  />\n                ))}\n            </Container>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  );\n};\n\nTweetBox.propTypes = {\n  placeholder: PropTypes.string,\n  handleAlert: PropTypes.func,\n  setAlert: PropTypes.func,\n};\n\nTweetBox.defaultProps = {\n  placeholder: '',\n  handleAlert: noop,\n  setAlert: noop,\n};\n\nexport default memo(TweetBox);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport Alert from 'react-bootstrap/Alert';\n\nimport './CustomAlert.scss';\n\nconst CustomAlert = ({ isShown, variant, message }) => (\n  <Alert\n    className={clsx('custom-alert', isShown ? 'shown' : 'hidden')}\n    variant={variant}\n  >\n    {message}\n  </Alert>\n);\n\nCustomAlert.propTypes = {\n  isShown: PropTypes.string,\n  variant: PropTypes.string,\n  message: PropTypes.string,\n};\n\nCustomAlert.defaultProps = {\n  isShown: '',\n  variant: '',\n  message: '',\n};\n\nexport default CustomAlert;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { noop } from 'utils';\nimport './Toggle.scss';\n\nconst Toggle = ({ lLabel, rLabel, isRain, toggle }) => (\n  <div className=\"toggleContainer\">\n    <span className=\"label\">{lLabel}</span>\n    <label className=\"switch\" htmlFor=\"toggle\">\n      <input type=\"checkbox\" id=\"toggle\" onClick={() => toggle(!isRain)} />\n      <span className=\"slider round\" />\n    </label>\n    <span className=\"label\">{rLabel}</span>\n  </div>\n);\n\nToggle.propTypes = {\n  lLabel: PropTypes.string,\n  rLabel: PropTypes.string,\n  isRain: PropTypes.bool,\n  toggle: PropTypes.func,\n};\n\nToggle.defaultProps = {\n  lLabel: '',\n  rLabel: '',\n  isRain: false,\n  toggle: noop,\n};\n\nexport default memo(Toggle);\n","import React, { memo } from 'react';\n\nimport './Rain.scss';\n\nconst rains = [];\n\nfor (let i = 0; i < 150; i++) {\n  rains.push(<i key={i} className=\"rain\" />);\n}\n\nconst Rain = () => <div className=\"rain-wrapper\">{rains}</div>;\n\nexport default memo(Rain);\n","import React, { memo } from 'react';\n\nimport './Snow.scss';\n\nconst Snow = () => (\n  <div className=\"snow\">\n    <svg viewBox=\"0 0 1024 1536\" preserveAspectRatio=\"xMidYMax slice\">\n      <g fill=\"#FFF\" fillOpacity=\".15\" transform=\"translate(55 42)\">\n        <g id=\"snow-bottom-layer\">\n          <ellipse cx=\"6\" cy=\"1009.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"138\" cy=\"1110.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"398\" cy=\"1055.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"719\" cy=\"1284.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"760\" cy=\"1155.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"635\" cy=\"1459.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"478\" cy=\"1335.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"322\" cy=\"1414.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"247\" cy=\"1234.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"154\" cy=\"1425.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"731\" cy=\"773.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"599\" cy=\"874.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"339\" cy=\"819.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"239\" cy=\"1004.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"113\" cy=\"863.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"102\" cy=\"1223.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"395\" cy=\"1155.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"826\" cy=\"943.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"626\" cy=\"1054.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"887\" cy=\"1366.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"6\" cy=\"241.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"138\" cy=\"342.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"398\" cy=\"287.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"719\" cy=\"516.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"760\" cy=\"387.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"635\" cy=\"691.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"478\" cy=\"567.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"322\" cy=\"646.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"247\" cy=\"466.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"154\" cy=\"657.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"731\" cy=\"5.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"599\" cy=\"106.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"339\" cy=\"51.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"239\" cy=\"236.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"113\" cy=\"95.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"102\" cy=\"455.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"395\" cy=\"387.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"826\" cy=\"175.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"626\" cy=\"286.5\" rx=\"6\" ry=\"5.5\" />\n          <ellipse cx=\"887\" cy=\"598.5\" rx=\"6\" ry=\"5.5\" />\n        </g>\n      </g>\n      <g fill=\"#FFF\" fillOpacity=\".3\" transform=\"translate(65 63)\">\n        <g id=\"snow-top-layer\">\n          <circle cx=\"8\" cy=\"776\" r=\"8\" />\n          <circle cx=\"189\" cy=\"925\" r=\"8\" />\n          <circle cx=\"548\" cy=\"844\" r=\"8\" />\n          <circle cx=\"685\" cy=\"1115\" r=\"8\" />\n          <circle cx=\"858\" cy=\"909\" r=\"8\" />\n          <circle cx=\"874\" cy=\"1438\" r=\"8\" transform=\"rotate(180 874 1438)\" />\n          <circle cx=\"657\" cy=\"1256\" r=\"8\" transform=\"rotate(180 657 1256)\" />\n          <circle cx=\"443\" cy=\"1372\" r=\"8\" transform=\"rotate(180 443 1372)\" />\n          <circle cx=\"339\" cy=\"1107\" r=\"8\" transform=\"rotate(180 339 1107)\" />\n          <circle cx=\"24\" cy=\"1305\" r=\"8\" transform=\"rotate(180 24 1305)\" />\n          <circle cx=\"8\" cy=\"8\" r=\"8\" />\n          <circle cx=\"189\" cy=\"157\" r=\"8\" />\n          <circle cx=\"548\" cy=\"76\" r=\"8\" />\n          <circle cx=\"685\" cy=\"347\" r=\"8\" />\n          <circle cx=\"858\" cy=\"141\" r=\"8\" />\n          <circle cx=\"874\" cy=\"670\" r=\"8\" transform=\"rotate(180 874 670)\" />\n          <circle cx=\"657\" cy=\"488\" r=\"8\" transform=\"rotate(180 657 488)\" />\n          <circle cx=\"443\" cy=\"604\" r=\"8\" transform=\"rotate(180 443 604)\" />\n          <circle cx=\"339\" cy=\"339\" r=\"8\" transform=\"rotate(180 339 339)\" />\n          <circle cx=\"24\" cy=\"537\" r=\"8\" transform=\"rotate(180 24 537)\" />\n        </g>\n      </g>\n    </svg>\n  </div>\n);\n\nexport default memo(Snow);\n","const handleAlert = ({ type, setAlert }) => {\n  setAlert(type);\n  setTimeout(() => {\n    setAlert('');\n  }, 2000);\n};\n\nexport default handleAlert;\n","import React, { useState, memo } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport TweetBox from 'components/tweet-box/TweetBox';\nimport CustomAlert from 'components/alert/CustomAlert';\nimport Toggle from 'components/toggle/Toggle';\nimport Snow from 'components/snow/Snow';\nimport Rain from 'components/rain/Rain';\nimport { alertProps } from 'utils';\n\nimport handleAlert from './handleAlert';\nimport './App.scss';\n\nconst App = () => {\n  const [isRain, toggle] = useState(false);\n  const [alert, setAlert] = useState('');\n\n  return (\n    <div className=\"App\">\n      <Toggle lLabel=\"Snow\" rLabel=\"Rain\" isRain={isRain} toggle={toggle} />\n      {isRain ? <Rain /> : <Snow />}\n      <header />\n      <TweetBox\n        placeholder=\"What's happening?\"\n        setAlert={setAlert}\n        handleAlert={handleAlert}\n      />\n      <CustomAlert isShown={alert} {...alertProps[alert]} />\n    </div>\n  );\n};\n\nexport default memo(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'app/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}